<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | Android Pig]]></title>
  <link href="http://kimsonchuh.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://kimsonchuh.github.io/"/>
  <updated>2016-01-12T10:28:17+08:00</updated>
  <id>http://kimsonchuh.github.io/</id>
  <author>
    <name><![CDATA[Kimson Chuh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android - 录音与网络音频播放功能]]></title>
    <link href="http://kimsonchuh.github.io/blog/2016/01/06/android-lu-yin-yu-wang-luo-yin-pin-bo-fang-gong-neng/"/>
    <updated>2016-01-06T10:03:14+08:00</updated>
    <id>http://kimsonchuh.github.io/blog/2016/01/06/android-lu-yin-yu-wang-luo-yin-pin-bo-fang-gong-neng</id>
    <content type="html"><![CDATA[<p>在美学的项目中，涉及到音频的录制与播放，其功能的实现具体步骤如下。
首先需要以下3个类：
    * PressToSpeakListener
    * VoicePlayManager
    * VoiceRecorder</p>

<p>在项目中使用上类实现的功能是设置两个个button（一个录音，一个播放），用户长按button可以实现录音功能，而当用户松开button时，结束录音。然后用户点击播放按钮可以实现播放的功能。具体实现只使用了以下代码</p>

<!-- more -->


<p>在美学的项目中，涉及到音频的录制与播放，其功能的实现具体步骤如下。
首先需要以下3个类：
    * PressToSpeakListener
    * VoicePlayManager
    * VoiceRecorder</p>

<p>在项目中使用上类实现的功能是设置两个个button（一个录音，一个播放），用户长按button可以实现录音功能，而当用户松开button时，结束录音。然后用户点击播放按钮可以实现播放的功能。具体实现只使用了以下代码</p>

<pre><code class="java">private void initRecorder() {
    String output = String.format("reply_%d_%d", question.getId(), Calendar.getInstance().getTimeInMillis());
    mAddVoice.setOnTouchListener(new PressToSpeakListener(this, mRecordStatus, output, new PressToSpeakListener.Callback() {
        @Override
        public void onPressed() {
            Log.e(TAG, "&gt;&gt;&gt;onPressed");
        }

        @Override
        public void onRelease() {
            Log.e(TAG, "&gt;&gt;&gt;onRelease");
        }

        @Override
        public void onRecorded(int length) {
            Log.e(TAG, "&gt;&gt;&gt;onRecorded");
            recordTime = length;
        }

        @Override
        public void onConverted(File output) {
            Log.e(TAG, "&gt;&gt;&gt;onConverted");
            recordFile = output;
            mAddVoice.setVisibility(View.GONE);
            mAudioPlayLayout.setVisibility(View.VISIBLE);
            //此时实现播放录音的功能
            mVoicePlay.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    voicePlayManager.play(QuestionDetailActivity.this, null, null, recordFile.getAbsolutePath());
                }
            });
        }
    }));
}
</code></pre>

<p>下面给出3个相关类的代码：
VoiceRecorder.java
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">VoiceRecorder</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="n">VoiceRecorder</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getSimpleName</span><span class="o">();</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">WHAT_VOLUME</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="n">Context</span> <span class="n">mContext</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">AudioRecord</span> <span class="n">mAudioRecord</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">mOutput</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">short</span><span class="o">[]</span> <span class="n">mBuffer</span><span class="o">;</span>
</span><span class='line'><span class="c1">//    private MediaRecorder mMediaRecorder;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">OnRecordingListener</span> <span class="n">mListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="n">File</span> <span class="n">mPcm</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">File</span> <span class="n">mMp3</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">boolean</span> <span class="n">mIsRecording</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">double</span> <span class="n">mLastVolume</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="nf">VoiceRecorder</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">String</span> <span class="n">output</span> <span class="o">,</span><span class="n">OnRecordingListener</span> <span class="n">listener</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">mOutput</span> <span class="o">=</span> <span class="n">output</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">mListener</span> <span class="o">=</span> <span class="n">listener</span><span class="o">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">TextUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mOutput</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mOutput</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;voice_%d&quot;</span><span class="o">,</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getTimeInMillis</span><span class="o">());</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">init</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">bufferSize</span> <span class="o">=</span> <span class="n">AudioRecord</span><span class="o">.</span><span class="na">getMinBufferSize</span><span class="o">(</span><span class="n">Lame</span><span class="o">.</span><span class="na">SAMPLE_RATE</span><span class="o">,</span> <span class="n">AudioFormat</span><span class="o">.</span><span class="na">CHANNEL_IN_MONO</span><span class="o">,</span> <span class="n">AudioFormat</span><span class="o">.</span><span class="na">ENCODING_PCM_16BIT</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mBuffer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">short</span><span class="o">[</span><span class="n">bufferSize</span><span class="o">];</span>
</span><span class='line'>    <span class="n">mAudioRecord</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">AudioRecord</span><span class="o">(</span><span class="n">MediaRecorder</span><span class="o">.</span><span class="na">AudioSource</span><span class="o">.</span><span class="na">MIC</span><span class="o">,</span> <span class="n">Lame</span><span class="o">.</span><span class="na">SAMPLE_RATE</span><span class="o">,</span> <span class="n">AudioFormat</span><span class="o">.</span><span class="na">CHANNEL_IN_MONO</span><span class="o">,</span> <span class="n">AudioFormat</span><span class="o">.</span><span class="na">ENCODING_PCM_16BIT</span><span class="o">,</span> <span class="n">bufferSize</span><span class="o">);</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">dir</span> <span class="o">=</span> <span class="n">FileUtils</span><span class="o">.</span><span class="na">getFilesDir</span><span class="o">(</span><span class="n">mContext</span><span class="o">).</span><span class="na">getAbsolutePath</span><span class="o">()</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;record&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="n">dir</span><span class="o">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="n">file</span><span class="o">.</span><span class="na">mkdirs</span><span class="o">();</span>
</span><span class='line'>    <span class="n">mPcm</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">mOutput</span> <span class="o">+</span> <span class="s">&quot;.pcm&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mMp3</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="n">mOutput</span> <span class="o">+</span> <span class="s">&quot;.mp3&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">File</span> <span class="nf">getPcm</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">mPcm</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">File</span> <span class="nf">getMp3</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">mMp3</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 开始录音</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">getPcm</span><span class="o">().</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">getPcm</span><span class="o">().</span><span class="na">delete</span><span class="o">();</span>
</span><span class='line'>        <span class="n">getMp3</span><span class="o">().</span><span class="na">delete</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Calendar</span> <span class="n">c</span> <span class="o">=</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
</span><span class='line'>    <span class="n">startTime</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="n">startTime</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getTimeInMillis</span><span class="o">();</span>
</span><span class='line'>    <span class="n">mAudioRecord</span><span class="o">.</span><span class="na">startRecording</span><span class="o">();</span>
</span><span class='line'>    <span class="n">startBufferedWrite</span><span class="o">(</span><span class="n">getPcm</span><span class="o">());</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//        mMediaRecorder = new MediaRecorder();</span>
</span><span class='line'><span class="c1">//        mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);</span>
</span><span class='line'><span class="c1">//        mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.RAW_AMR);</span>
</span><span class='line'><span class="c1">//        mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);</span>
</span><span class='line'><span class="c1">//        mMediaRecorder.setAudioSamplingRate(Lame.SAMPLE_RATE);</span>
</span><span class='line'><span class="c1">//        mMediaRecorder.setOutputFile(mRecordFile.getPcm().getAbsolutePath());</span>
</span><span class='line'><span class="c1">//        mMediaRecorder.prepare();</span>
</span><span class='line'><span class="c1">//        mMediaRecorder.start();</span>
</span><span class='line'>        <span class="n">mIsRecording</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mListener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">mListener</span><span class="o">.</span><span class="na">startRecording</span><span class="o">();</span>
</span><span class='line'><span class="c1">//        mHandler.sendEmptyMessage(WHAT_VOLUME);</span>
</span><span class='line'><span class="c1">//        mHandler.post(mRunnable);</span>
</span><span class='line'>    <span class="o">}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 停止录音</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">int</span> <span class="nf">stop</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//        if (mMediaRecorder != null) {</span>
</span><span class='line'><span class="c1">//            mMediaRecorder.stop();</span>
</span><span class='line'><span class="c1">//            mMediaRecorder.release();</span>
</span><span class='line'><span class="c1">//            mMediaRecorder = null;</span>
</span><span class='line'><span class="c1">//        }</span>
</span><span class='line'>        <span class="n">mIsRecording</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mListener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mListener</span><span class="o">.</span><span class="na">stopRecording</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">mAudioRecord</span><span class="o">.</span><span class="na">stop</span><span class="o">();&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">mHandler</span><span class="o">.</span><span class="na">removeMessages</span><span class="o">(</span><span class="n">WHAT_VOLUME</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">nowTime</span> <span class="o">=</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getTimeInMillis</span><span class="o">();</span>
</span><span class='line'>    <span class="c1">// 如果录制时间小于1秒，则返回0，并删除文件</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">((</span><span class="n">nowTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="mi">1000</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">getPcm</span><span class="o">().</span><span class="na">delete</span><span class="o">();</span>
</span><span class='line'>            <span class="n">getMp3</span><span class="o">().</span><span class="na">delete</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span> <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// 转换为 MP3</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">getPcm</span><span class="o">().</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">new</span> <span class="n">AsyncTask</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;()</span> <span class="o">{</span>
</span><span class='line'>                <span class="nd">@Override</span>
</span><span class='line'>                <span class="kd">protected</span> <span class="n">Void</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="c1">// 由于讯飞的录音功能和我自己写的配置不太一致，所以需要调用encodeFile 方法而不能encodeFile2</span>
</span><span class='line'>                    <span class="n">Lame</span><span class="o">.</span><span class="na">getDefault</span><span class="o">().</span><span class="na">initEncoder</span><span class="o">(</span><span class="n">Lame</span><span class="o">.</span><span class="na">NUM_CHANNELS</span><span class="o">,</span> <span class="n">Lame</span><span class="o">.</span><span class="na">SAMPLE_RATE</span><span class="o">,</span> <span class="n">Lame</span><span class="o">.</span><span class="na">BIT_RATE</span><span class="o">,</span> <span class="n">Lame</span><span class="o">.</span><span class="na">MODE</span><span class="o">,</span> <span class="n">Lame</span><span class="o">.</span><span class="na">QUALITY</span><span class="o">);</span>
</span><span class='line'>                    <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">Lame</span><span class="o">.</span><span class="na">getDefault</span><span class="o">().</span><span class="na">encodeFile</span><span class="o">(</span><span class="n">getPcm</span><span class="o">().</span><span class="na">getAbsolutePath</span><span class="o">(),</span> <span class="n">getMp3</span><span class="o">().</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>                    <span class="n">Lame</span><span class="o">.</span><span class="na">getDefault</span><span class="o">().</span><span class="na">destroyEncoder</span><span class="o">();</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">mListener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">mListener</span><span class="o">.</span><span class="na">converted</span><span class="o">(</span><span class="n">getMp3</span><span class="o">());</span>
</span><span class='line'>                    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">((</span><span class="n">nowTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">)</span> <span class="o">/</span> <span class="mi">1000</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 丢弃录音文件</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">discard</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mAudioRecord</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mAudioRecord</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">mIsRecording</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="n">mHandler</span><span class="o">.</span><span class="na">removeMessages</span><span class="o">(</span><span class="n">WHAT_VOLUME</span><span class="o">);</span>
</span><span class='line'>    <span class="c1">// 删除记录文件</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">getPcm</span><span class="o">().</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">getPcm</span><span class="o">().</span><span class="na">delete</span><span class="o">();</span>
</span><span class='line'>        <span class="n">getMp3</span><span class="o">().</span><span class="na">delete</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mListener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">mListener</span><span class="o">.</span><span class="na">discardRecording</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">startBufferedWrite</span><span class="o">(</span><span class="kd">final</span> <span class="n">File</span> <span class="n">file</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="k">new</span> <span class="nf">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">DataOutputStream</span> <span class="n">output</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">output</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">DataOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="nf">BufferedOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="nf">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">)));</span>
</span><span class='line'>                <span class="k">while</span> <span class="o">(</span><span class="n">mIsRecording</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="kt">int</span> <span class="n">readSize</span> <span class="o">=</span> <span class="n">mAudioRecord</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">mBuffer</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">mBuffer</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>                    <span class="kt">int</span> <span class="n">v</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>                    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">readSize</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">output</span><span class="o">.</span><span class="na">writeShort</span><span class="o">(</span><span class="n">mBuffer</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>                        <span class="n">v</span> <span class="o">+=</span> <span class="n">mBuffer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">*</span> <span class="n">mBuffer</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">Message</span> <span class="n">msg</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Message</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">msg</span><span class="o">.</span><span class="na">what</span> <span class="o">=</span> <span class="n">WHAT_VOLUME</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">msg</span><span class="o">.</span><span class="na">arg1</span> <span class="o">=</span> <span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">v</span> <span class="o">/</span> <span class="o">(</span><span class="kt">float</span><span class="o">)</span> <span class="n">readSize</span><span class="o">)</span> <span class="o">/</span> <span class="mi">10000</span><span class="o">)</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">mHandler</span><span class="o">.</span><span class="na">sendMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">mContext</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">output</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">output</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>                    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">mContext</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                    <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>                        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">output</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">mContext</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}).</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">protected</span> <span class="n">Handler</span> <span class="n">mHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Handler</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">case</span> <span class="nl">WHAT_VOLUME:</span>
</span><span class='line'>                <span class="kt">double</span> <span class="n">volume</span> <span class="o">=</span> <span class="n">msg</span><span class="o">.</span><span class="na">arg1</span><span class="o">;</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(!</span><span class="n">mIsRecording</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">volume</span> <span class="o">!=</span> <span class="n">mLastVolume</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">mLastVolume</span> <span class="o">=</span> <span class="n">volume</span><span class="o">;</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">mListener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">mListener</span><span class="o">.</span><span class="na">onVolumeChanged</span><span class="o">(</span><span class="n">mLastVolume</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//                    msg = obtainMessage(WHAT_VOLUME);</span>
</span><span class='line'><span class="c1">//                    sendMessageDelayed(msg, 100);</span>
</span><span class='line'>                    <span class="k">break</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">OnRecordingListener</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">startRecording</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">stopRecording</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">discardRecording</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">converted</span><span class="o">(</span><span class="n">File</span> <span class="n">outPut</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">onVolumeChanged</span><span class="o">(</span><span class="kt">double</span> <span class="n">volume</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>VoicePlayManager.java
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">VoicePlayManager</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="n">VoicePlayManager</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getSimpleName</span><span class="o">();&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="n">ImageView</span> <span class="n">mCtrPlayButton</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">TextView</span> <span class="n">mCtrLength</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">AnimationDrawable</span> <span class="n">mPlayingAnimation</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">remoteUrl</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="n">MediaPlayer</span> <span class="n">mediaPlayer</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">PlayCompleteCallback</span> <span class="n">callback</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">play</span><span class="o">(</span><span class="kd">final</span> <span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">ImageView</span> <span class="n">ctrPlayButton</span><span class="o">,</span> <span class="n">TextView</span> <span class="n">ctrLength</span><span class="o">,</span> <span class="n">String</span> <span class="n">url</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">release</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mPlayingAnimation</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">mCtrPlayButton</span> <span class="o">=</span> <span class="n">ctrPlayButton</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">mCtrLength</span> <span class="o">=</span> <span class="n">ctrLength</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">remoteUrl</span> <span class="o">=</span> <span class="n">url</span><span class="o">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mediaPlayer</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">release</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">mediaPlayer</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MediaPlayer</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>    <span class="n">mediaPlayer</span><span class="o">.</span><span class="na">setOnPreparedListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">OnPreparedListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPrepared</span><span class="o">(</span><span class="n">MediaPlayer</span> <span class="n">mp</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mp</span><span class="o">.</span><span class="na">setPlaybackSpeed</span><span class="o">(</span><span class="mf">1.0f</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'>    <span class="n">mediaPlayer</span><span class="o">.</span><span class="na">setOnInfoListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">OnInfoListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onInfo</span><span class="o">(</span><span class="n">MediaPlayer</span> <span class="n">mp</span><span class="o">,</span> <span class="kt">int</span> <span class="n">what</span><span class="o">,</span> <span class="kt">int</span> <span class="n">extra</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;&amp;gt;&amp;gt;&amp;gt;onInfo&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="k">switch</span> <span class="o">(</span><span class="n">what</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">case</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">MEDIA_INFO_BUFFERING_START</span><span class="o">:</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">mp</span><span class="o">.</span><span class="na">isPlaying</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">mp</span><span class="o">.</span><span class="na">pause</span><span class="o">();</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="k">break</span><span class="o">;</span>
</span><span class='line'>                <span class="k">case</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">MEDIA_INFO_BUFFERING_END</span><span class="o">:</span>
</span><span class='line'>                    <span class="n">startPlayingAnimation</span><span class="o">();</span>
</span><span class='line'>                    <span class="n">mp</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>                    <span class="k">break</span><span class="o">;</span>
</span><span class='line'>                <span class="k">case</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">MEDIA_INFO_DOWNLOAD_RATE_CHANGED</span><span class="o">:</span>
</span><span class='line'>                    <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">extra</span> <span class="o">+</span> <span class="s">&quot;kb/s&quot;</span> <span class="o">+</span> <span class="s">&quot;  &quot;</span><span class="o">);</span>
</span><span class='line'>                    <span class="k">break</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'>    <span class="n">mediaPlayer</span><span class="o">.</span><span class="na">setOnCompletionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">OnCompletionListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCompletion</span><span class="o">(</span><span class="n">MediaPlayer</span> <span class="n">mp</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;&amp;gt;&amp;gt;&amp;gt;onCompletion&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">release</span><span class="o">();</span>
</span><span class='line'>            <span class="c1">//这里是音频播放完之后的回调</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">callback</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">callback</span> <span class="o">=</span> <span class="o">(</span><span class="n">PlayCompleteCallback</span><span class="o">)</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">callback</span><span class="o">.</span><span class="na">onPlayComplete</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'>    <span class="n">mediaPlayer</span><span class="o">.</span><span class="na">setOnErrorListener</span><span class="o">(</span><span class="k">new</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">OnErrorListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onError</span><span class="o">(</span><span class="n">MediaPlayer</span> <span class="n">mp</span><span class="o">,</span> <span class="kt">int</span> <span class="n">what</span><span class="o">,</span> <span class="kt">int</span> <span class="n">extra</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">release</span><span class="o">();</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">});</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mediaPlayer</span><span class="o">.</span><span class="na">setDataSource</span><span class="o">(</span><span class="n">remoteUrl</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mediaPlayer</span><span class="o">.</span><span class="na">prepareAsync</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">startPlayingAnimation</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mCtrPlayButton</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mPlayingAnimation</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mPlayingAnimation</span> <span class="o">=</span> <span class="o">(</span><span class="n">AnimationDrawable</span><span class="o">)</span> <span class="n">mCtrPlayButton</span><span class="o">.</span><span class="na">getDrawable</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassCastException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mPlayingAnimation</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mPlayingAnimation</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">stopPlayingAnimation</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mCtrPlayButton</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mPlayingAnimation</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">mPlayingAnimation</span> <span class="o">=</span> <span class="o">(</span><span class="n">AnimationDrawable</span><span class="o">)</span> <span class="n">mCtrPlayButton</span><span class="o">.</span><span class="na">getDrawable</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassCastException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="c1">// 停止动画，并显示动画最后一帧</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">mPlayingAnimation</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mPlayingAnimation</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mPlayingAnimation</span><span class="o">.</span><span class="na">selectDrawable</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">release</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">stopPlayingAnimation</span><span class="o">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">mediaPlayer</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>            <span class="k">return</span><span class="o">;</span>
</span><span class='line'>        <span class="n">mediaPlayer</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mediaPlayer</span><span class="o">.</span><span class="na">release</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mediaPlayer</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">PlayCompleteCallback</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">onPlayComplete</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>PressToSpeakListener.java
```java
public class PressToSpeakListener implements View.OnTouchListener, VoiceRecorder.OnRecordingListener {
    private static final String TAG = PressToSpeakListener.class.getSimpleName();</p>

<pre><code>private VoiceRecorder mVoiceRecorder;
private PowerManager.WakeLock mWakeLock;
private Context mContext;
private View mStatusView;
private ImageView mStatusVolume;
private TextView recordingHint;
private Callback mCallback;

//    private View recordingContainer;
</code></pre>

<p>//
    public PressToSpeakListener() {
    }</p>

<pre><code>public PressToSpeakListener(Context context, View status, String output) {
    this(context, status, output, null);
}

public PressToSpeakListener(Context context, View status, String output, Callback callback) {
    this.mContext = context;
    this.mStatusView = status;
    this.mCallback = callback;
    this.mVoiceRecorder = new VoiceRecorder(mContext, output, this);
    this.mStatusVolume = ViewUtils.find(mStatusView, R.id.recording_image);
    this.recordingHint = ViewUtils.find(mStatusView, R.id.recording_hint);
}

//
@Override
public boolean onTouch(View v, MotionEvent event) {
    if (mWakeLock == null) {
        mWakeLock = ((PowerManager) mContext.getSystemService(Context.POWER_SERVICE)).newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK, "recording");
    }
    switch (event.getAction()) {
        case MotionEvent.ACTION_DOWN:
            try {
                v.setPressed(true);
                mWakeLock.acquire();
                mVoiceRecorder.start();
                // TODO: 开始录音，显示录音提醒 View
                mStatusView.setVisibility(View.VISIBLE);

                ((Activity) mContext).runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        if (mCallback != null) mCallback.onPressed();
                    }
                });
            } catch (Exception e) {
                e.printStackTrace();
                v.setPressed(false);
                if (mWakeLock.isHeld()) {
                    mWakeLock.release();
                }
                // TODO: 录音失败，隐藏 View
                mStatusView.setVisibility(View.INVISIBLE);
</code></pre>

<p>//                    Toast.makeText(ChatActivity.this, &ldquo;录制失败&rdquo;, Toast.LENGTH_SHORT).show();
                    return false;
                }</p>

<pre><code>            return true;
        case MotionEvent.ACTION_MOVE: {
            if (recordingHint != null) {
                if (event.getY() &lt; 0) {
                    recordingHint.setText(mContext.getString(R.string.release_to_cancel));
</code></pre>

<p>//                        recordingHint.setBackgroundResource(R.drawable.recording_text_hint_bg);
                    } else {
                        recordingHint.setText(mContext.getString(R.string.move_up_to_cancel));
//                        recordingHint.setBackgroundColor(Color.TRANSPARENT);
                    }
                }
                return true;
            }
            case MotionEvent.ACTION_UP:
                v.setPressed(false);
                // TODO:录音状态
                mStatusView.setVisibility(View.INVISIBLE);
                if (mWakeLock.isHeld())
                    mWakeLock.release();
                if (event.getY() &lt; 0) {
                    // discard the recorded audio.
                    mVoiceRecorder.discard();
                } else {
                    // stop recording and send voice file
                    try {
                        int length = mVoiceRecorder.stop();
//                        if (length > 0) {
////                            sendVoice(mVoiceRecorder.getVoiceFilePath(), mVoiceRecorder.getVoiceFileName(toUsername), Integer.toString(length), false);
//                        } else {
//                            //Toast.makeText(getApplicationContext(), &ldquo;录音时间太短&rdquo;, Toast.LENGTH_SHORT).show();
//                        }
                        if (mCallback != null) mCallback.onRecorded(length);
                    } catch (Exception e) {
                        e.printStackTrace();
//                        Toast.makeText(ChatActivity.this, &ldquo;发送失败，请检测服务器是否连接&rdquo;, Toast.LENGTH_SHORT).show();
                    }</p>

<pre><code>            }

            ((Activity) mContext).runOnUiThread(new Runnable() {
                @Override
                public void run() {
                    if (mCallback != null) mCallback.onRelease();
                }
            });
            return true;
        default:
            return false;
    }
}

@Override
public void startRecording() {

}

@Override
public void stopRecording() {

}

@Override
public void discardRecording() {

}

@Override
public void converted(final File output) {
    ((Activity) mContext).runOnUiThread(new Runnable() {
        @Override
        public void run() {
            if (mCallback != null) mCallback.onConverted(output);
        }
    });
}

@Override
public void onVolumeChanged(double volume) {
    if (D) Log.e(TAG, "音量：" + volume);
    if (mStatusVolume == null) return;
    if (volume &lt;= 33) {
        mStatusVolume.setImageResource(R.drawable.photo_record_notice_1);
    } else if (volume &lt;= 66) {
        mStatusVolume.setImageResource(R.drawable.photo_record_notice_2);
    } else if (volume &lt;= 100) {
        mStatusVolume.setImageResource(R.drawable.photo_record_notice_3);
    } else {
        mStatusVolume.setImageResource(R.drawable.photo_record_notice_1);
    }
}

public interface Callback {
    void onPressed();
    void onRelease();
    void onRecorded(int length);
    void onConverted(File output);
}
</code></pre>

<p>}</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[类淘宝的粘滞效果-StickyScrollView]]></title>
    <link href="http://kimsonchuh.github.io/blog/2016/01/06/lei-tao-bao-de-nian-zhi-xiao-guo-stickyscrollview/"/>
    <updated>2016-01-06T10:01:29+08:00</updated>
    <id>http://kimsonchuh.github.io/blog/2016/01/06/lei-tao-bao-de-nian-zhi-xiao-guo-stickyscrollview</id>
    <content type="html"><![CDATA[<h4>简介</h4>

<p>对于许多电商的App都在详情页中使用了一种粘滞的效果，这种效果是由淘宝首先发起使用的，后来许多电商争相效仿。之前做的一个水果商城的相关项目中也使用了这种效果，但是当时是参考了别人开源的代码，一个自定义View，<a href="http://www.2cto.com/kf/201408/326934.html">ScrollContainer</a>。该类可以实现类似于淘宝App那种粘滞的效果，但是体验不是很好，所以这里就干脆自己重新编写一个。</p>

<!-- more -->


<h4>目录结构</h4>

<ul>
<li>效果描述</li>
<li>实现思路</li>
<li>实现代码</li>
<li>代码分析</li>
</ul>


<h5>效果描述</h5>

<p>如果没有对这种效果了解过，可以打开淘宝或京东的客户端中产品的详情页体验一下。具体效果就是一个页面中，主要分成两部分，这里称为上部分和下部分；用户进入该页面时只显示上部分，下部分只是一个网页，使用webview（此时webview还没有进行加载数据）。当用户滑动上部分到屏幕底部时，会提示向上滑动以查看更具体的详情，当用户向上滑动到距离时，下部分会自动弹到页面顶部并且加载数据。而用户向上滑动小于指定距离时，则会返回原来的位置。而下部分弹回上部分也是同样的原理。</p>

<h5>实现思路</h5>

<p>根据<a href="http://www.2cto.com/kf/201408/326934.html">ScrollContainer</a>的实现思路，该类是继承RelativeLayout，也是有两个子view，上部分是一个ScrollView，下部分是一个webView。当用户滑到ScrollView到底部时，判断是否满足跳转页面的条件，如果满足则记录距离和滑动速度，并触发监听，然后该类进行刷新，重新调用measure和onlayout方法，然后根据之前记录的距离和速度进行刷新页面，从而达到滑动的效果。但是这样做的缺点是用在绘制页面的资源消耗较大，而且对于滑动速度的自定义程度小，所以我重新设计了一个实现方案。我这里实现的思路与上面所述的ScrollContainer基本相同，不同的是使用了scroller滑动类对滑动进行控制，该类可以实现对滑动速度的自定义，给开发者提供了更大的扩展性。</p>

<h5>实现代码</h5>

<pre><code class="java">public class StickyScrollView extends ScrollView {
    public static final String TAG = StickyScrollView.class.getSimpleName();
    public static final int PAGE_TOP = 0;
    public static final int PAGE_BOTTOM = 1;
    public static final double PERCENT = 0.4;
    public static final int ANIMATION_DURATION = 180;
    public static final int TOUCH_DURATION = 150;

    private ViewGroup mChildLayout;
    private View mTopChildView;

    private Context mContext;
    private OnPageChangeListener onPageChangeListener;

    private boolean isScrollAuto;           //判断是否自由滚动
    private Scroller mScroller;             //滑动类
    private int screenHeight;               //屏幕高度
    private int offsetDistance;             //topview的高度与屏幕的高度差
    private int topChildHeight;             //topview的高度
    private boolean isTouch;                //用户是否在触控屏幕
    private int currentPage;                //值为0时屏幕显示topview，值为1时屏幕显示bottomview
    private long downTime;                  //用户按下屏幕的时间戳
    private long upTime;                    //用户抬起时的时间戳
    private int downY;                      //用户按下屏幕的y坐标
    private int upY;                        //用户抬起的y坐标
    private boolean isPageChange;           //页面是否切换

    public StickyScrollView(Context context) {
        super(context);
        this.mContext = context;
    }

    public StickyScrollView(Context context, AttributeSet attrs) {
        super(context, attrs);
        this.mContext = context;
    }

    public StickyScrollView(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        this.mContext = context;
    }

    public void setOnPageChangeListener(OnPageChangeListener onPageChangeListener) {
        this.onPageChangeListener = onPageChangeListener;
    }

    @Override
    protected void onLayout(boolean changed, int l, int t, int r, int b) {
        super.onLayout(changed, l, t, r, b);

        mChildLayout = (ViewGroup) getChildAt(0);
        mTopChildView = mChildLayout.getChildAt(0);
        topChildHeight = mTopChildView.getMeasuredHeight();
        screenHeight = getMeasuredHeight();
        offsetDistance = topChildHeight - screenHeight;
    }

    @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
        switch (ev.getAction()) {
            case MotionEvent.ACTION_DOWN:
                isTouch = true;
                downY = (int) ev.getY();
                downTime = System.currentTimeMillis();
                if (mScroller != null) {
                    mScroller.forceFinished(true);
                    mScroller = null;
                }
                break;
            case MotionEvent.ACTION_MOVE:
                break;
            case MotionEvent.ACTION_UP:
                isTouch = false;
                upY = (int) ev.getY();
                upTime = System.currentTimeMillis();
                //用户手指在屏幕上的时间
                long duration = upTime - downTime;

                //这里要确保点击事件不失效
                if (Math.abs(upY - downY) &gt; 50) {
                    Log.e(TAG, "&gt;&gt;&gt;ISN_T CLICK:" + Math.abs(upY - downY));
                    if (currentPage == PAGE_TOP) {
                        //下面的判断已经能确定用户是否往上滑
                        if (getScrollY() &gt; offsetDistance) {
                            mScroller = new Scroller(mContext);
                            if (getScrollY() &lt; (screenHeight * PERCENT + offsetDistance) &amp;&amp; duration &gt; TOUCH_DURATION) {
                                isPageChange = false;
                                scrollToTarget(PAGE_TOP);
                            } else {
                                //切换到下界面
                                isPageChange = true;
                                isScrollAuto = duration &lt; TOUCH_DURATION ? true : false;
                                scrollToTarget(PAGE_BOTTOM);
                                currentPage = PAGE_BOTTOM;
                            }
                            return false;
                        }
                    } else {
                        if (getScrollY() &lt; topChildHeight) {
                            mScroller = new Scroller(mContext);
                            if (getScrollY() &lt; (topChildHeight - screenHeight * PERCENT) || duration &lt; TOUCH_DURATION) {
                                //切换到上界面
                                isPageChange = true;
                                isScrollAuto = duration &lt; TOUCH_DURATION ? true : false;
                                scrollToTarget(PAGE_TOP);
                                currentPage = PAGE_TOP;
                            } else {
                                isPageChange = false;
                                scrollToTarget(PAGE_BOTTOM);
                            }
                            return false;
                        }
                    }
                }
                break;
        }
        return super.dispatchTouchEvent(ev);
    }

    /**
     * 滚动到指定位置
     */
    private void scrollToTarget(int currentPage) {
        int delta;
        if (currentPage == PAGE_TOP) {
            delta = getScrollY() - offsetDistance;
            mScroller.startScroll(0, getScrollY(), 0, -delta, isScrollAuto == true ? ANIMATION_DURATION : (int) (Math.abs(delta) * 0.4));
        } else if (currentPage == PAGE_BOTTOM) {
            delta = getScrollY() - topChildHeight;
            mScroller.startScroll(0, getScrollY(), 0, -delta, isScrollAuto == true ? ANIMATION_DURATION : (int) (Math.abs(delta) * 0.4));
        }
        postInvalidate();
    }

    @Override
    public void computeScroll() {
        // 调用startScroll的时候scroller.computeScrollOffset()返回true
        super.computeScroll();
        if (mScroller == null) {
            return;
        }
        if (mScroller.computeScrollOffset()) {
            this.scrollTo(mScroller.getCurrX(), mScroller.getCurrY());
            postInvalidate();
            if (mScroller.isFinished()) {
                mScroller = null;
                if (onPageChangeListener != null &amp;&amp; isPageChange) onPageChangeListener.OnPageChange(currentPage);
            }
        }
    }


    @Override
    protected void onScrollChanged(int l, int t, int oldl, int oldt) {
        super.onScrollChanged(l, t, oldl, oldt);
        //滚动时的监听,当用户触屏滑动时不监听，t == getScrollY
        if (currentPage == PAGE_TOP) {
            if (getScrollY() &gt; offsetDistance &amp;&amp; !isTouch) {
                if (mScroller == null) {
                    //用于控制当滑动到分界线时停止滚动
                    scrollTo(0, offsetDistance);
                } else {
                    scrollToTarget(PAGE_TOP);
                }
            }
        } else if (currentPage == PAGE_BOTTOM) {
            if (getScrollY() &lt; topChildHeight &amp;&amp; !isTouch) {
                if (mScroller == null) {
                    scrollTo(0, topChildHeight);
                } else {
                    scrollToTarget(PAGE_BOTTOM);
                }
            }
        }
    }

    /**
     * 切换页面完成后的回调
     */
    public interface OnPageChangeListener {
        void OnPageChange(int currentPage);
    }

}
</code></pre>

<h5>代码分析</h5>

<p>StickyScroll类是继承了ScrollView，一个LinearLayout作为子View，而LinearLayout中包含两个
代码中主要功能的实现集中在以下几个方法中。
1. <code>onLayout</code> 复写该方法是为了获取子view中的高度
2. <code>dispatchTouchEvent</code> 效果实现的主要逻辑。在用户抬起手指时判断滑动到原来的位置或者是切换页面，并且在切换的时候禁用自动滚动，优化体验。 <br/>
3. <code>scrollToTarget</code> 根据传入的参数启动Scroller，滚动到指定的偏移量。
4. <code>computeScroll</code> 判断是否已经滚动结束，如果是在切换页面的情况下滚动结束，则调用回调方法，通知页面切换。
5. <code>onScrollChanged</code> 根据情况是StickyScrollView实现自动滚动或者是滚动到指定的位置。</p>

<h4>总结</h4>

<p>实现StickyScrollView这种具有粘滞效果的自定义主要的难点在于如何计算滑动的距离以及自动滚动。只要把这部分的逻辑实现好了之后，基本功能就实现了，剩下的也就是功能优化的修修补补了。最终的实现效果如下：
<img src="https://github.com/Kimsonchuh/StickScrollView/blob/master/images/stickyScrollview.gif" alt="" /></p>
]]></content>
  </entry>
  
</feed>
